---
const {
  title,
  project,
  vacancies,
  projectArea,
  residence,
  gender,
  typeOfContract,
  starting,
  deadline,
  link,
  dl,
} = Astro.props;
const setColor = (dl) => {
  const color =
    dl > 7
      ? "var(--blue-7)"
      : dl >= 3
      ? "var(--green-7)"
      : dl < 3 && dl > 0
      ? "var(--red-7)"
      : "var(--gray-7)";
  return color;
};

const borderColor = setColor(dl);
---

<div class="card dynamic-border">
  <div class="content">
    <p class="title">
      {title}
    </p>
    <p>
      <span><strong>Project name:</strong></span>
      {project}
    </p>
    <p>
      <span><strong>Number of vacancies:</strong></span>{vacancies}
    </p>
    <p>
      <span><strong>Project area:</strong></span>{projectArea}
    </p>
    <p>
      <span><strong>Applicant's residence:</strong></span>{residence}
    </p>
    <p>
      <span><strong>Preferable gender:</strong></span>{gender}
    </p>
    <p>
      <span><strong>Type of contract:</strong></span>
      {typeOfContract}
    </p>
  </div>
  <div class="dates">
    <p class="announcement-data">
      <span><strong>Expected starting date:</strong></span>
      {starting}
    </p>
    <p class="deadline">
      <span><strong>Deadline:</strong></span>
      {deadline}
    </p>
  </div>
  <div class="buttons">
    <button class="button">Read more</button>
    <button v-if="dl > 0" class="button">Apply</button>
  </div>
</div>

<style define:vars={{ borderColor }}>
  @import "./announcement-cards-style.css";

  .dynamic-border {
    border-top: var(--border-size-3) solid var(--borderColor);
  }
</style>
