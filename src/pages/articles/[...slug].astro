---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import DateFormat from "../../components/DateFormat.astro";
import Image from "astro/components/Image.astro";
import MediaScroller from "@components/MediaScroller.astro";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

interface Props {
  article: CollectionEntry<"articles">;
}

const { article } = Astro.props;

const { title, desc, author, location, date, language } = article.data;
const { Content } = await article.render();

const images = await Astro.glob("../../content/articles/*/*.webp");

const articleImages = images
  .map((item) => item.default)
  .filter((item) => item.src.includes(article.slug));

const extractName = (path) => {
  const arrayFromPath = path.split("/");
  const unEditedName = arrayFromPath[arrayFromPath.length - 1].split(".")[0];
  const name = unEditedName.split("-").join(" ");
  return name;
};

const items = [
  {
    name: "home",
    link: "/",
    disabled: false,
  },
  {
    name: "articles",
    disabled: true,
  },
  {
    name: title,
    disabled: true,
  },
];
---

<MainLayout title={`articles | ${title}`} crumbs={items} dir="ltr">
  <article>
    <header>
      <h1>{title}</h1>
      <h2>{desc}</h2>
      <p><strong>Author: </strong>{author}</p>
      <p><strong>Location: </strong>{location}</p>
      <p><strong>Language: </strong>{language}</p>
      <p><strong>Date: </strong><DateFormat date={date} /></p>
      <div class="photos-slider">
        <MediaScroller>
          {
            articleImages.map((i) => (
              <div class="media-element">
                <Image
                  src={i}
                  height="500"
                  alt={title}
                  class="media-element__img"
                  format="webp"
                />
                <p class="media-element__text">{extractName(i.src)}</p>
              </div>
            ))
          }
        </MediaScroller>
      </div>
    </header>
    <main>
      <Content />
    </main>
  </article>
</MainLayout>

<style>
  article {
    max-width: 65ch;
    margin: 0 auto;
    margin-block-start: 3rem;
    margin-block-end: 10rem;
    padding-inline: 1rem;
  }

  .photos-slider {
    overflow-x: hidden;
    max-width: 65ch;
  }

  .media-element {
    display: grid;
    justify-items: center;
    position: relative;
    max-width: 100%;
  }

  .media-element__img {
    object-fit: cover;
    max-width: 30ch;
    height: auto;
    aspect-ratio: 4/3;
  }

  @media (min-width: 480px) {
    .media-element__img {
      max-width: 35ch;
    }
  }

  .media-element__text {
    font-size: var(--fs-xs);
    font-weight: 400;
    place-self: center;
    padding: 0.5rem;
    width: 100%;
    display: grid;
    place-content: center;
  }

  h1 {
    font-size: var(--fs-fl-md);
    margin-block-end: 1.1rem;
    font-weight: 600;
    color: var(--primary);
  }

  h2 {
    margin-bottom: 1rem;
    font-size: var(--fs-fl-sm);
  }

  article > header > p {
    margin-bottom: 0.5rem;
    font-size: var(--fs-sm);
    text-transform: capitalize;
  }

  article > main {
    display: grid;
    gap: 1rem;
    font-size: var(--fs-sm);
  }

  article > main :global(blockquote) {
    padding-block: 1rem;
    border-inline-start: 2px solid var(--primary);
    padding-inline-start: 2rem;
  }
</style>
