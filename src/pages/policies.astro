---
import MainLayout from "../layouts/MainLayout.astro";

const response = await fetch(
  "https://harikar-reports-api.cyclic.app/v3/policies",
);
const { policies } = await response.json();

const items = [
  {
    name: "home",
    link: "/",
    disabled: false,
  },
  {
    name: "policies",
    disabled: true,
  },
];
---

<MainLayout title="Harikar policies" crumbs={items}>
  <div class="main-wrap">
    <table>
      <caption> Policies are available upon request</caption>
      <thead>
        <tr>
          <th scope="col">Policy</th>
          <th scope="col">Version</th>
          <th scope="col">Date</th>
        </tr>
      </thead>

      <tbody>
        {
          policies.map((item) => (
            <tr>
              <td data-label="Policy" scope="row">
                {item.policy}
              </td>
              <td data-label="Version" scope="row">
                {item.version}
              </td>
              <td data-label="Date" scope="row">
                {item.year}
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>
</MainLayout>

<style>
  .main-wrap {
    padding-block-start: 3rem;
    padding-block-end: 10rem;
    padding-inline: 1.25rem;
    display: grid;
    gap: 3rem;
  }

  @media (min-width: 950px) {
    .main-wrap {
      padding-inline: 10rem;
      gap: 5rem;
    }
    .breadcrumbs {
      margin-left: 3rem;
      margin-top: 1rem;
    }
  }

  caption {
    padding-block-start: 1rem;
  }

  table {
    border-collapse: collapse;
    margin: 0;
    padding: 0;
    width: 100%;
    table-layout: fixed;
  }

  table caption {
    font-size: 1rem;
    margin: 0.5em 0 0.75em;
    caption-side: bottom;
  }

  table tr {
    background-color: var(--surface);
    border: 1px solid var(--primary);
    padding: 0.35em;
  }

  table th,
  table td {
    padding: 0.625em;
    text-align: start;
  }

  table th {
    font-size: 0.85em;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    background-color: var(--primary-container);
    color: var(--on-primary-container);
  }

  @media screen and (max-width: 600px) {
    table {
      border: 0;
    }

    table thead {
      border: none;
      clip: rect(0 0 0 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    table tr {
      display: block;
      margin-bottom: 0.625em;
    }

    table td {
      border-bottom: 1px solid var(--primary);
      display: block;
      font-size: 0.8em;
      text-align: right;
    }

    table td::before {
      /*
          * aria-label has no advantage, it won't be read inside a table
            content: attr(aria-label);
          */
      content: attr(data-label);
      float: left;
      font-weight: bold;
      text-transform: uppercase;
    }

    table td:last-child {
      border-bottom: 0;
    }
  }
</style>
