---
import Breadcrumbs from "../components/Breadcrumbs.astro";
import MainLayout from "./MainLayout.astro";
import { Image } from 'astro:assets'
import MediaScroller from "../components/MediaScroller.astro";

const { title, desc, date, author, language, location, slug } =
  Astro.props.frontmatter;

const response = await fetch(
  `https://api.github.com/repos/Harikar-NGO/harikar-website-files/contents/articles/${slug}`
);
const data = await response.json();
const articlePhotos = await data.map((item) => item.download_url);

const extractName = (path) => {
  const arrayFromPath = path.split("/");
  const unEditedName = arrayFromPath[arrayFromPath.length - 1].split(".")[0];
  const name = unEditedName.split("-").join(" ");
  return name;
};

const items = [
  {
    name: "Home",
    link: "/",
    disabled: false,
  },
  {
    name: "Events and Stories",
    link: "/events-and-stories",
    disabled: false,
  },
  {
    name: "Now reading",
    disabled: true,
  },
];
---

<MainLayout title={"Events and Stories" + title}>
  <Breadcrumbs class="breadcrumbs" items={items} />
  <div class="main-wrap">
    <div class="content-wrap">
      <h2 class="title">{title}</h2>
      <p class="desc">{desc}</p>
      <p class="meta">
        By {author} in {location} |
        {date} |
        {language}
      </p>
      <div class="photos-slider">
        <MediaScroller>
          {
            articlePhotos.map((photo) => (
              <div class="media-element">
                <Image
                  alt={extractName(photo)}
                  src={photo}
                  width="900"
                  class="media-element__img"
                  format="webp"
                />
                <p class="media-element__title">{extractName(photo)}</p>
              </div>
            ))
          }
        </MediaScroller>
      </div>
    </div>
    <article class="article">
      <slot />
    </article>
  </div>
</MainLayout>

<style>
  .main-wrap {
    place-items: center;
    padding-inline: var(--size-4);
    padding-block-start: var(--size-4);
    padding-block-end: var(--size-10);
  }
  .content-wrap {
  }

  @media (min-width: 480px) {
    .main-wrap {
      padding-inline: var(--size-8);
      padding-block-start: var(--size-8);
      padding-block-end: var(--size-12);
    }
  }

  @media (min-width: 980px) {
    .main-wrap {
      display: flex;
      flex-direction: column;
      place-items: center;
      padding-inline: var(--size-12);
      padding-block-start: var(--size-8);
      padding-block-end: var(--size-12);
    }
    .breadcrumbs {
      margin-left: var(--size-8);
      margin-top: var(--size-3);
    }
  }

  .title {
    font-size: var(--size-fluid-3);
    max-width: var(--size-content-2);
  }

  .desc {
    padding-block-start: var(--size-2);
    font-size: var(--size-fluid-2);
  }

  .meta {
    font-weight: var(--font-weight-6);
    font-size: var(--font-size-0);
    max-width: var(--size-content-2);
    padding-block-start: var(--size-2);
  }

  .photos-slider {
    overflow-x: hidden;
    max-width: 90ch;
  }

  .media-element {
    display: grid;
    justify-items: center;
    position: relative;
    max-width: 100%;
  }

  .media-element__img {
    object-fit: cover;
    max-width: 18em;
    height: auto;
  }

  @media (min-width: 480px) {
    .media-element__img {
      max-width: 30em;
    }
  }

  @media (min-width: 1400px) {
    .media-element__img {
      max-width: 50em;
    }
  }

  .media-element__title {
    font-size: var(--font-size-0);
    color: var(--text1);
    font-weight: var(--font-weight-4);
    place-self: center;
    padding: var(--size-1);
    width: 100%;
    display: grid;
    place-content: center;
    font-style: italic;
  }

  .article {
    text-align: justify;
    display: grid;
    gap: var(--size-4);
    padding-top: var(--size-1);
  }

  .article :global(p) {
    max-width: 85ch;
  }

  .article :global(ul) {
    padding-left: var(--size-4);
  }

  .article :global(ul > li) {
    max-width: 80ch;
  }
</style>
